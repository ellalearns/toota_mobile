name: Toota Expo CI/CD

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.14.0

      - name: Install dependencies
        run: npm install

      - name: Install Expo CLI and EAS CLI
        run: npm install -g expo-cli eas-cli

      - name: Authenticate with Expo
        run: |
          echo ${{ secrets.EXPO_TOKEN }} | eas whoami
        env:
          EAS_CLI_ACCESS_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build Android
        run: eas build --platform android --non-interactive

      - name: Rename Android APK
        run: |
          build_url=$(eas build:status --platform android --json | jq -r '.artifacts.buildUrl')
          echo "Build URL: $build_url"
          curl -L $build_url -o ./builds/toota.apk

      - name: Build iOS
        run: eas build --platform ios --non-interactive

      - name: Rename iOS IPA
        run: |
          build_url=$(eas build:status --platform ios --json | jq -r '.artifacts.buildUrl')
          echo "Build URL: $build_url"
          curl -L $build_url -o ./builds/toota.ipa

      - name: Generate new version tag
        id: version
        run: |
          latest_tag=$(git describe --tags --abbrev=0 || echo "v1.0.0")
          latest_version=${latest_tag#v}
          new_version=$(echo $latest_version | awk -F. '{print $1"."$2"."$3+1}')
          echo "NEW_VERSION=v$new_version" >> $GITHUB_ENV
          echo "New version: v$new_version"

      - name: Commit build files
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          git add builds/toota.apk builds/toota.ipa
          git commit -m "Auto-update build files ${{ env.NEW_VERSION }} [skip ci]" || echo "No changes to commit"
          git push origin master

      - name: Create Git Tag
        run: |
          git tag -a ${{ env.NEW_VERSION }} -m "Release ${{ env.NEW_VERSION }}"
          git push origin ${{ env.NEW_VERSION }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_VERSION }}
          name: "Release ${{ env.NEW_VERSION }}"
          body: "ðŸš€ New build available!\n\n- Android: [Download APK](https://github.com/${{ github.repository }}/raw/master/builds/toota.apk)\n- iOS: [Download IPA](https://github.com/${{ github.repository }}/raw/master/builds/toota.ipa)"
          draft: false
          prerelease: false
          files: |
            builds/toota.apk
            builds/toota.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean Up Old Builds
        run: |
          find builds -type f -name "*.apk" -mtime +1 -delete
          find builds -type f -name "*.ipa" -mtime +1 -delete
          git add builds/
          git commit -m "Cleanup old builds" || echo "No old builds to delete"
          git push origin master || echo "Nothing to push"
